#!/usr/bin/env python

import os
import sys
from git import Git

# Rider powerclass
class Rider:

  # Initialize a directory for Rider
  def rider_init(self):
    print "Initalizing Rider"

    # Setup rider lib
    if not os.path.exists('rider'):
      Git().clone("https://github.com/HackRider/Rider-lib.git")
      os.rename('Rider-lib', 'rider')

    # Setup the directories the user code will exist
    if not os.path.exists('controllers'):
      os.makedirs('controllers')
    if not os.path.exists('views'):
      os.makedirs('views')
    if not os.path.exists('public/js'):
      os.makedirs('public/js')
    if not os.path.exists('public/css'):
      os.makedirs('public/css')

    # Mark the directory as created by Rider
    if not os.path.exists('.rider'):
      file('.rider', 'w')

    print "Finished Initalizing Rider"

  # Create a controller
  def rider_controller(self, controller):
    if not os.path.exists('controllers/' + controller):
      file('controllers/' + controller)
    else:
      sys.exit('Controller ' + controller + ' already exists')

if (len(sys.argv) < 2):
  sys.exit('Invalid usage')

command = sys.argv[1].lower()
rider = Rider()
if command == 'init':
  rider.rider_init()
elif command == 'controller':
  if len(sys.argv) < 3:
    sys.exit('Invalid usage')
  rider.rider_controller(sys.argv[2])
